#!/usr/bin/lua

local uci = require("simple-uci").cursor()
local wireless = require 'gluon.wireless'
local util = require 'gluon.util'

local function configure_private_wifi(radio, index)
	local radio_name = radio['.name']
	local suffix = radio_name:match('^radio(%d+)$')
	local name   = "wan_" .. radio_name

	local encryption = uci:get('gluon', 'wireless', 'private_encryption')
	local ssid = uci:get('gluon', 'wireless', 'private_ssid')
	local key = uci:get('gluon', 'wireless', 'private_key')
	local mfp = wireless.device_supports_mfp(uci) and uci:get('gluon', 'wireless', 'private_mfp')

	-- migrate encryption from Gluon v2023.2.x or older
	-- remove this in 2027 or on first release supporting only upgrades from >=v2025.1.x
	encryption = encryption:gsub("psk3", "sae")

	local macaddr = wireless.get_wlan_mac('wan_radio', index, radio)
	uci:section('wireless', 'wifi-iface', name, {
		device     = radio_name,
		network    = 'wan',
		mode       = 'ap',
		encryption = encryption,
		ssid       = ssid,
		key        = key,
		macaddr    = macaddr,
		ifname     = suffix and 'wl-wan' .. suffix,
		disabled   = false,
	})

	-- hostapd-mini won't start in case 802.11w is configured
	if mfp then
		uci:set('wireless', name, 'ieee80211w', mfp)
	else
		uci:delete('wireless', name, 'ieee80211w')
	end
end

wireless.foreach_radio(uci, function(radio, index)
	local radio_name = radio['.name']
	local name   = "wan_" .. radio_name

	local roles = uci:get('gluon', radio.band, 'role')

	if not roles or not util.contains(roles, 'private') then
		uci:delete('wireless', name)
		return
	end

	configure_private_wifi(radio, index)
end)

uci:save('wireless')
